// Top-level build file where you can add configuration options common to all sub-projects/modules.
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
    }
}

allprojects {
    apply plugin: QDependPlugin
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
        mavenCentral()
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}


public class QDependPlugin implements Plugin<Project> {

    void apply(Project project) {
        project.extensions.create("depend", DependsComp)
    }
}


/**
 * 依赖版本统一配置
 */
class DependsComp {

    String androidxVersion = "1.6.1"
    String okHttpVersion = "4.11.0"
    def lifecycle_version = "2.5.1"

    def appcompat() {
        return appcompat(androidxVersion)
    }

    def appcompat(String version) {
        return "androidx.appcompat:appcompat:${version}"
    }

    def gson() {
        return "com.google.code.gson:gson:2.10.1"
    }

    def okhttpBom() {
        return "com.squareup.okhttp3:okhttp-bom:${okHttpVersion}"
    }

    def okhttp() {
        return "com.squareup.okhttp3:okhttp"
    }

    def okhttpLogging() {
        return "com.squareup.okhttp3:logging-interceptor"
    }

    def utilCodex() {
        return "com.blankj:utilcodex:1.31.1"
    }

    def retrofit() {
        return "com.squareup.retrofit2:retrofit:2.9.0"
    }

    def retrofit_coroutines_adapter() {
        return "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    }

    def retrofit_converter_gson() {
        return "com.squareup.retrofit2:converter-gson:2.9.0"
    }

    def coroutines() {
        return coroutines('1.6.4')
    }

    def coroutines(String version) {
        return "org.jetbrains.kotlinx:kotlinx-coroutines-android:${version}"
    }

    def core_ktx() {
        return "androidx.core:core-ktx:1.10.1"
    }

    def lifecycle_ext() {
        return "androidx.lifecycle:lifecycle-extensions:2.2.0"
    }

    def lifecycle_runtime_ktx() {
        return "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    }

    def viewModel_ktx() {
        return "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    }

    def liveData_ktx() {
        return "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    }

    def viewmodel_savedstate() {
        return "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    }

    def router() {
        return "com.alibaba:arouter-api:1.5.2"
    }

    def router_compiler() {
        return "com.alibaba:arouter-compiler:1.5.2"
    }
}